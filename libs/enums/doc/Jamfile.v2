#  Boost.Enums library documentation Jamfile  ---------------------------------
#
#  Copyright Vicente J. Botet Escriba 2009. Use, modification and
#  distribution is subject to the Boost Software License, Version
#  1.0. (See accompanying file LICENSE_1_0.txt or copy at
#  http://www.boost.org/LICENSE_1_0.txt)
#
#  See http://www.boost.org for updates, documentation, and revision history.

#import quickbook ;
using doxygen ;  # Required if you want to use Doxygen.
using quickbook ;


path-constant nav_images :  html/images/ ; # png and svg images for home, next, note, tip...
path-constant images_location : html ; # location of SVG and PNG images referenced by Quickbook.

echo "images_location" $(images_location) ; # \guild\enums\libs\enums\doc\html
echo "nav_images" $(nav_images) ; # \guild\enums\libs\enums\doc\html\images

import modules ;

if --enable-index in  [ modules.peek : ARGV ]
{
   ECHO "Building the Enums docs with automatic index generation enabled." ;
   using auto-index ;
   project : requirements
         # <auto-index>on turns on index (or off).
        <auto-index>on
                
        # Choose indexing method (separately for html and pdf):
        <format>html:<auto-index-internal>on  # on (or off) to use internally generated indexes.
        # <format>html:<xsl:param>generate.index=0 # Don't let the XSL stylesheets generate indexes.
        
        <format>pdf:<auto-index-internal>off # on (or off) to use internally generated indexes.
        # <auto-index-type>index  # Use <index>...</index> as the XML wrapper.
        
        <format>pdf:<xsl:param>index.on.type=1 # For the native stylesheets to generate the different indexes.
        # PDF native index support is probably better for PDFs as then you actually get page numbers.

        <auto-index-script>index.idx # Specifies the name of the script to load. 
        # <auto-index-prefix>../../../ # Path to /enums so index.idx !scan-path can use boost/ and libs/doc.
        <auto-index-prefix>../../.. 
        
        <quickbook-define>enable_index
        
        # <auto-index-verbose>on

	#doxygen common parameters
        <doxygen:param>"PREDEFINED=\"BOOST_OPAQUE_DOXYGEN_INVOKED=1\" \\
                                   \"BOOST_STATIC_CONSTEXPR=constexpr\" \\
                                   \"BOOST_DEDUCED_TYPENAME=typename\" \\
                                   \"BOOST_EXPLICIT=explicit\" \\
                                   \"BOOST_STATIC_CONSTANT(x,y)=static x const y\" \\
                                   \"BOOST_STATIC_ASSERT(cnd)=\" \\
                                   \"BOOST_ENUMS_CXX14_CONSTEXPR_NO_CONST=constexpr\" \\
                                   \"BOOST_CONSTEXPR=constexpr\"" 

        <doxygen:param>ALIASES=" Effects=\"<p><b>Effects:</b>\" \\ 
                                 Example=\"<p><b>Example:</b>\" \\ 
                                 TParams=\"<p><b>Template Parameters:</b>\" \\ 
                                 Params=\"<p><b>Parameters:</b>\" \\ 
                                 Param{2}=\"<p> - <b><c>\\1</c></b>: \\2.\" \\
                                 Returns=\"<p><b>Returns:</b>\" \\
                                 Result=\"<p><b>Result:</b>\" \\
                                 Throws=\"<p><b>Throws:</b>\" \\
                                 Pre=\"<p><b>Requires:</b>\" \\
                                 Requires=\"<p><b>Requires:</b>\" \\
                                 Post=\"<p><b>Post-conditions:</b>\" \\
                                 Remark=\"<p><b>Remark(s):</b>\" \\
                                 Note=\"<p><b>Note(s):</b>\" \\
                                 See=\"<p><b>See:</b>\" \\
                                 ThreadSafe=\"<p><b>ThreadSafe:</b> Yes.\" \\
                                 Basic=\"<p><b>Exception Safety:</b> basic guarantee\" \\
                                 Strong=\"<p><b>Exception Safety:</b> strong guarantee\" \\
                                 NoThrow=\"<p><b>Exception Safety:</b> no-throw guarantee\" \\
                                 RefSect{1}=\"\\xmlonly<link linkend='boost_opaque.\\1'>\\1</link>\\endxmlonly\" \\
                                 RefSect2{2}=\"\\xmlonly<link linkend='boost_opaque.\\1'>\\2</link>\\endxmlonly\" \\
                                 RefClass{1}=\"\\xmlonly<computeroutput><classname alt='\\1'>\\1</classname></computeroutput>\\endxmlonly\" \\
                                 RefMacro{1}=\"\\xmlonly<computeroutput><macroname alt='\\1'>\\1</macroname></computeroutput>\\endxmlonly\" "


        <doxygen:param>SORT_MEMBER_DOCS=NO
        <doxygen:param>SHOW_USED_FILES=YES

        <doxygen:param>SHOW_INCLUDE_FILES=YES
        <doxygen:param>WARNINGS=YES # Default NO, but useful to see warnings, especially in a logfile.
        # It is also wise to to set a warnings logfile like this:
        <doxygen:param>WARN_LOGFILE=AutoDoxywarnings.log # This may not be empty (usually not a good sign!), depending on options chosen.
        # Much better to send message to a logfile than the default stderr.
        # and make sure that there are no Doxygen errors or significant warnings in the log file.
        <doxygen:param>RECURSIVE=NO # Search recursively down subdirectories.
        <doxygen:param>EXTRACT_ALL=YES
        <doxygen:param>ENABLE_PREPROCESSING=YES
        <doxygen:param>MACRO_EXPANSION=YES

        <doxygen:param>HIDE_UNDOC_MEMBERS=NO
        <doxygen:param>EXTRACT_PRIVATE=NO
        <doxygen:param>EXPAND_ONLY_PREDEF=YES
        #<doxygen:param>EXPAND_STATIC=YES
        <doxygen:param>SEARCH_INCLUDES=YES
        <doxygen:param>INCLUDE_PATH=$(BOOST)
        
        ;
}
else
{
   ECHO "Building the Enums docs with automatic index generation disabled. To get an auto-index, try building with --enable-index." ;

   project : requirements
	#doxygen common parameters
        <doxygen:param>"PREDEFINED=\"BOOST_ENUMS_DOXYGEN_INVOKED=1\" \\
                                   \"BOOST_STATIC_CONSTEXPR=constexpr\" \\
                                   \"BOOST_DEDUCED_TYPENAME=typename\" \\
                                   \"BOOST_EXPLICIT=explicit\" \\
                                   \"BOOST_STATIC_CONSTANT(x,y)=static x const y\" \\
                                   \"BOOST_STATIC_ASSERT(cnd)=\" \\
                                   \"BOOST_ENUMS_CXX14_CONSTEXPR_NO_CONST=constexpr\" \\
                                   \"BOOST_CONSTEXPR=constexpr\"" 

        <doxygen:param>ALIASES=" Effects=\"<p><b>Effects:</b>\" \\ 
                                 Example=\"<p><b>Example:</b>\" \\ 
                                 TParams=\"<p><b>Template Parameters:</b>\" \\ 
                                 Params=\"<p><b>Parameters:</b>\" \\ 
                                 Param{2}=\"<p> - <b><c>\\1</c></b>: \\2.\" \\
                                 Returns=\"<p><b>Returns:</b>\" \\
                                 Result=\"<p><b>Result:</b>\" \\
                                 Throws=\"<p><b>Throws:</b>\" \\
                                 Pre=\"<p><b>Requires:</b>\" \\
                                 Requires=\"<p><b>Requires:</b>\" \\
                                 Post=\"<p><b>Post-conditions:</b>\" \\
                                 Remark=\"<p><b>Remark(s):</b>\" \\
                                 Note=\"<p><b>Note(s):</b>\" \\
                                 See=\"<p><b>See:</b>\" \\
                                 ThreadSafe=\"<p><b>ThreadSafe:</b> Yes.\" \\
                                 Basic=\"<p><b>Exception Safety:</b> basic guarantee\" \\
                                 Strong=\"<p><b>Exception Safety:</b> strong guarantee\" \\
                                 NoThrow=\"<p><b>Exception Safety:</b> no-throw guarantee\" \\
                                 RefSect{1}=\"\\xmlonly<link linkend='boost_opaque.\\1'>\\1</link>\\endxmlonly\" \\
                                 RefSect2{2}=\"\\xmlonly<link linkend='boost_opaque.\\1'>\\2</link>\\endxmlonly\" \\
                                 RefClass{1}=\"\\xmlonly<computeroutput><classname alt='\\1'>\\1</classname></computeroutput>\\endxmlonly\" \\
                                 RefMacro{1}=\"\\xmlonly<computeroutput><macroname alt='\\1'>\\1</macroname></computeroutput>\\endxmlonly\" "


        <doxygen:param>SORT_MEMBER_DOCS=NO
        <doxygen:param>SHOW_USED_FILES=YES

        <doxygen:param>SHOW_INCLUDE_FILES=YES
        <doxygen:param>WARNINGS=YES # Default NO, but useful to see warnings, especially in a logfile.
        # It is also wise to to set a warnings logfile like this:
        <doxygen:param>WARN_LOGFILE=AutoDoxywarnings.log # This may not be empty (usually not a good sign!), depending on options chosen.
        # Much better to send message to a logfile than the default stderr.
        # and make sure that there are no Doxygen errors or significant warnings in the log file.
        <doxygen:param>RECURSIVE=NO # Search recursively down subdirectories.
        <doxygen:param>EXTRACT_ALL=YES
        <doxygen:param>ENABLE_PREPROCESSING=YES
        <doxygen:param>MACRO_EXPANSION=YES

        <doxygen:param>HIDE_UNDOC_MEMBERS=NO
        <doxygen:param>EXTRACT_PRIVATE=NO
        <doxygen:param>EXPAND_ONLY_PREDEF=YES
        #<doxygen:param>EXPAND_STATIC=YES
        <doxygen:param>SEARCH_INCLUDES=YES
        <doxygen:param>INCLUDE_PATH=$(BOOST)

        ;
}


doxygen top_ref
   :
      [ glob ../../../boost/enums.hpp ]
      [ glob ../../../boost/enums/config.hpp ]
   :
        <xsl:param>"boost.doxygen.reftitle=Top Level Reference"
   ;

doxygen scoped_enums_ref
   :
      [ glob ../../../boost/enums/scoped.hpp ]
      [ glob ../../../boost/enums/scoped/native_type.hpp ]
      [ glob ../../../boost/enums/scoped/native_value.hpp ]
      [ glob ../../../boost/enums/scoped/underlying_type.hpp ]
      [ glob ../../../boost/enums/scoped/underlying_value.hpp ]
      [ glob ../../../boost/enums/scoped/default_value.hpp ]
      [ glob ../../../boost/enums/scoped/emulation.hpp ]
      [ glob ../../../boost/enums/scoped/scoping_type.hpp ]
      [ glob ../../../boost/enums/scoped/is_enum.hpp ]
      [ glob ../../../boost/enums/scoped/enum_type_cons.hpp ]
      [ glob ../../../boost/enums/scoped/enum_type_no_cons.hpp ]
      [ glob ../../../boost/enums/scoped/enum_class_cons.hpp ]
      [ glob ../../../boost/enums/scoped/enum_class_no_cons.hpp ]
   :
        <xsl:param>"boost.doxygen.reftitle=Scoped Enums Reference"
   ;

doxygen macros
   :
      [ glob ../../../boost/enums/pp/*.hpp ]
   :
        <xsl:param>"boost.doxygen.reftitle=Enums Macros Reference"
   ;

doxygen ordinal_enums_ref
   :
      [ glob ../../../boost/enums/ordinal.hpp ]
      [ glob ../../../boost/enums/ordinal/traits.hpp ]
      [ glob ../../../boost/enums/ordinal/linear_traiter.hpp ]
      [ glob ../../../boost/enums/ordinal/size.hpp ]
      [ glob ../../../boost/enums/ordinal/pos.hpp ]
      [ glob ../../../boost/enums/ordinal/val.hpp ]
      [ glob ../../../boost/enums/ordinal/first.hpp ]
      [ glob ../../../boost/enums/ordinal/last.hpp ]
      [ glob ../../../boost/enums/ordinal/pred.hpp ]
      [ glob ../../../boost/enums/ordinal/succ.hpp ]
   :
        <xsl:param>"boost.doxygen.reftitle=Ordinal Enums Reference"
   ;


doxygen enums_containers_ref
   :
      [ glob ../../../boost/enums/containers.hpp ]
      [ glob ../../../boost/enums/containers/enum_array.hpp ]
      [ glob ../../../boost/enums/containers/enum_set.hpp ]
      [ glob ../../../boost/enums/containers/enum_range.hpp ]
      [ glob ../../../boost/enums/containers/enum_subrange.hpp ]
   :
        <xsl:param>"boost.doxygen.reftitle=Enum Containers Reference"
   ;

doxygen mpl_enums_ref
   :
      [ glob ../../../boost/enums/mpl.hpp ]
      [ glob ../../../boost/enums/mpl/*.hpp ]
   :
        <xsl:param>"boost.doxygen.reftitle=MPL Enums Reference"
   ;



xml enums : enums.qbk ;

boostbook standalone
   :
      enums
   :
        # HTML options first:
        # Use graphics not text for navigation:
        <xsl:param>navig.graphics=1
        # How far down we chunk nested sections, basically all of them:
        <xsl:param>chunk.section.depth=0
        # Don't put the first section on the same page as the TOC:
        <xsl:param>chunk.first.sections=1
        # How far down sections get TOC's
        <xsl:param>toc.section.depth=4
        # Max depth in each TOC:
        <xsl:param>toc.max.depth=2
        # How far down we go with TOC's
        <xsl:param>generate.section.toc.level=10
        # Path for links to Boost:
        <xsl:param>boost.root=../../../..
        # Path for libraries index:
        <xsl:param>boost.libraries=../../../../libs/libraries.htm
        # Use the main Boost stylesheet:
        #<xsl:param>html.stylesheet=../../../../doc/src/boostbook.css
        <xsl:param>html.stylesheet=./boostbook.css

        # PDF Options:
        # TOC Generation: this is needed for FOP-0.9 and later:
        <xsl:param>fop1.extensions=0
        # Or enable this if you're using XEP:
        <xsl:param>xep.extensions=1
        # TOC generation: this is needed for FOP 0.2, but must not be set to zero for FOP-0.9!
        <xsl:param>fop.extensions=0
        # No indent on body text:
        <xsl:param>body.start.indent=0pt
        # Margin size:
        <xsl:param>page.margin.inner=0.5in
        # Margin size:
        <xsl:param>page.margin.outer=0.5in
        # Yes, we want graphics for admonishments:
        <xsl:param>admon.graphics=1
        # Set this one for PDF generation *only*:
        # default pnd graphics are awful in PDF form,
        # better use SVG's instead:
        <format>pdf:<xsl:param>admon.graphics.extension=".svg"
        <format>pdf:<xsl:param>admon.graphics.path=$(boost-images)/
        <format>pdf:<xsl:param>boost.url.prefix=http://www.boost.org/doc/libs/release/libs/enums/doc/html
        <dependency>top_ref #
        <dependency>scoped_enums_ref #
        <dependency>ordinal_enums_ref #
        <dependency>enums_containers_ref #
        <dependency>mpl_enums_ref #
        <dependency>macros #
        <dependency>css-install
        <dependency>png-install
        <dependency>svg-install
        <dependency>enums-png-install
        <dependency>enums-svg-install
   ;

path-constant boost-root : [ modules.peek : BOOST ] ;
install css-install : $(boost-root)/doc/src/boostbook.css : <location>html ;

install png-install : [ glob $(boost-root)/doc/src/images/*.png $(boost-root)/boost.png ] : <location>html/images ;
install svg-install : [ glob $(boost-root)/doc/src/images/*.svg ] : <location>html/images ;

install pdf-install : standalone : <install-type>PDF <location>. <name>enums.pdf ;

install enums-png-install : [ glob images/*.png ] : <location>html/images ;
install enums-svg-install : [ glob images/*.svg ] : <location>html/images ;


